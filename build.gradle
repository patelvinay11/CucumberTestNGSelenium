/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

java {
    sourceCompatibility = 17
    targetCompatibility = 17
}

dependencies {
    // Use TestNG framework, also requires calling test.useTestNG() below
    //testImplementation 'org.testng:testng:7.6.0' // enable this when no qmetry added

    // This dependency is used by the application.
    //implementation 'com.google.guava:guava:31.0.1-jre' // enable this when no qmetry added

    testImplementation 'io.cucumber:cucumber-java:5.7.0'  // When no qmetry then use 7.6.0
    testImplementation ('io.cucumber:cucumber-testng:5.7.0') { // When no qmetry then use 7.6.0// When no qmetry then use 7.6.0
        exclude group: 'org.testng', module: 'testng'
    }
    testImplementation 'io.cucumber:cucumber-picocontainer:5.7.0' // Required for Hooks (dependency injection)
    //implementation 'org.seleniumhq.selenium:selenium-java:4.0.0' // enable this when no qmetry added
    //implementation 'org.seleniumhq.selenium:selenium-leg-rc:4.0.0' // enable this when no qmetry added
    //implementation 'io.github.bonigarcia:webdrivermanager:5.3.0' // enable this when no qmetry added

    implementation 'com.qmetry:qaf:3.1.0'
    implementation 'com.qmetry:qaf-cucumber:3.1.0'
    //implementation 'com.qmetry:qaf-support:3.1.0'
    //implementation 'com.qmetry:qaf-support-ws:3.1.0'
    implementation 'tech.grasshopper:extentreports-cucumber5-adapter:2.16.0'
    implementation 'com.vladsch.flexmark:flexmark-all:0.64.8' // Added for converting WebPage to MarkDown file

    implementation 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    // Can be Deleted - Start
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.0'
    implementation 'com.sun.codemodel:codemodel:2.6'
    testImplementation 'junit:junit:4.13.2'
    // Can be Deleted - End


}

tasks.named('test') {
    // Use TestNG for tests.
    useTestNG() {
        parallel="tests"
        threadCount=2
        jvmArgs(["-Ddataproviderthreadcount=${threads}"]) // Default value is defined in gradle.properties //gradle clean test -Pthreads=4
        jvmArgs(["-Dcucumber.filter.tags=${tags}"]) //gradle clean test -Ptags="@MissingUsername or @InvalidCredentials"
        scanForTestClasses = false
        testLogging {
            showStandardStreams = true
            events = ["passed", "failed", "skipped"]
        }
    }
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {

            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty',
                    '--glue', 'com.example.definitions', 'src/test/resources']
        }
    }
}
